// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-float32ndarray-like@v0.2.2-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-negative-integer@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-fast-min@v0.3.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-without@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-normalize-index@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-maybe-broadcast-arrays@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2ndarray@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-iter-stacks@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import{ndarray as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-sdot@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function p(p,g){var f,u,j,v,b,c,y,x,w,E,T,S,V,k,z,D;if(!e(p))throw new TypeError(h("invalid argument. First argument must be an ndarray containing single-precision floating-point numbers. Value: `%s`.",p));if(!e(g))throw new TypeError(h("invalid argument. Second argument must be an ndarray containing single-precision floating-point numbers. Value: `%s`.",g));if(w=d(p),E=d(g),u=w.shape,j=E.shape,u.length<1)throw new TypeError(h("invalid argument. First argument must have at least one dimension."));if(j.length<1)throw new TypeError(h("invalid argument. Second argument must have at least one dimension."));if(arguments.length>2){if(!t(f=arguments[2]))throw new TypeError(h("invalid argument. Third argument must be a negative integer. Value: `%s`.",f))}else f=-1;if(V=r(u.length,j.length)-1,-1===(f=i(f,V)))throw new RangeError(h("invalid argument. Third argument must be a value on the interval: [%d,%d]. Value: `%d`.",-V,-1,arguments[2]));if(k=u[f],j[f]!==k)throw new RangeError(h("invalid argument. The size of the contracted dimension must be the same for both input ndarrays. Dim(%s,%d) = %d. Dim(%s,%d) = %d.","x",f,k,"y",f,j[f]));try{x=a([w,E])}catch(e){throw new Error(h("invalid arguments. Input ndarrays must be broadcast compatible. Shape(%s) = (%s). Shape(%s) = (%s).","x",u.join(","),"y",j.join(",")))}if(w=x[0],E=x[1],v=s(w.shape,f),y=o(v,{dtype:w.dtype,order:w.order}),0===v.length)return z=l(k,w.data,w.strides[0],w.offset,E.data,E.strides[0],E.offset),y.iset(z),y;for(b=m(w,[f]),c=m(E,[f]),D=0;D<n(v);D++)T=b.next().value,S=c.next().value,z=l(k,T.data,T.strides[0],T.offset,S.data,S.strides[0],S.offset),y.iset(D,z);return y}export{p as default};
//# sourceMappingURL=index.mjs.map
